<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs title="Yes/No/Maybe" author="Zachary “Gamer_Z.” Yaro" author_email="zmyaro@gmail.com">
		<Require feature="wave"/>
	</ModulePrefs>
	<Content type="html">
		<![CDATA[
			<style type="text/css">
				button {
					border-style: solid;
					border-width: 1px;
					-webkit-border-radius: 4px;
					   -moz-border-radius: 4px;
					        border-radius: 4px;
					
					
					color: white;
					text-shadow:rgba(0, 0, 0, 0.5) 1px 1px 0px;
					font-family: Arial, Helvetica, sans-serif;
					font-size: 11pt;
					text-align: center;
					padding: 2px 4px 3px;
					margin: 0;
					display: block;
					width: 100%;
					
					-webkit-user-select:none;
					   -moz-user-select:none;
					        user-select:none;
					cursor: pointer;
					
					white-space: nowrap;
				}
				button:hover {
					        box-shadow: 0px 0px 1px orange; /* Opera, IE9 */
					   -moz-box-shadow: 0px 0px 1px orange; /* Gecko (FF, SeaMonkey) */
					-webkit-box-shadow: 0px 0px 1px orange; /* WebKit (Safari, Chrome) */
				}
				#yBtn {
					border-color: #527B09;
					background-color: #9B0;
					background: -webkit-gradient(linear, left top, left bottom, from(#92B009), to(#5E6F28));
					background: -webkit-linear-gradient(#92B009, #5E6F28);
					background:    -moz-linear-gradient(#92B009, #5E6F28);
					background:     -ms-linear-gradient(#92B009, #5E6F28);
					background:      -o-linear-gradient(#92B009, #5E6F28);
					background:         linear-gradient(#92B009, #5E6F28);
				}
				#yBtn:active {
					background: -webkit-gradient(linear, left top, left bottom, from(#4A5900), to(#657C00));
					background: -webkit-linear-gradient(#4A5900, #657C00);
					background:    -moz-linear-gradient(#4A5900, #657C00);
					background:     -ms-linear-gradient(#4A5900, #657C00);
					background:      -o-linear-gradient(#4A5900, #657C00);
					background:         linear-gradient(#4A5900, #657C00);
				}
				#yBtn:disabled {
					background-color: #5E6F28;
					background-image: none;
					cursor: default;
				}
				#nBtn {
					border-color: #600;
					background-color: #C00;
					background: -webkit-gradient(linear, left top, left bottom, from(#AE0D0D), to(#540200));
					background: -webkit-linear-gradient(#AE0D0D, #540200);
					background:    -moz-linear-gradient(#AE0D0D, #540200);
					background:     -ms-linear-gradient(#AE0D0D, #540200);
					background:      -o-linear-gradient(#AE0D0D, #540200);
					background:         linear-gradient(#AE0D0D, #540200);
				}
				#nBtn:active {
					background: -webkit-gradient(linear, left top, left bottom, from(#620000), to(#870000));
					background: -webkit-linear-gradient(#620000, #870000);
					background:    -moz-linear-gradient(#620000, #870000);
					background:     -ms-linear-gradient(#620000, #870000);
					background:      -o-linear-gradient(#620000, #870000);
					background:         linear-gradient(#620000, #870000);
				}
				#nBtn:disabled {
					background-color: #690000;
					background-image: none;
					cursor: default;
				}
				#mBtn {
					border-color: #7F6500;
					background-color: #FC0;
					background: -webkit-gradient(linear, left top, left bottom, from(#ECBF19), to(#9E8315));
					background: -webkit-linear-gradient(#ECBF19, #9E8315);
					background:    -moz-linear-gradient(#ECBF19, #9E8315);
					background:     -ms-linear-gradient(#ECBF19, #9E8315);
					background:      -o-linear-gradient(#ECBF19, #9E8315);
					background:         linear-gradient(#ECBF19, #9E8315);
				}
				#mBtn:active {
					background: -webkit-gradient(linear, left top, left bottom, from(#7A6100), to(#A98400));
					background: -webkit-linear-gradient(#7A6100, #A98400);
					background:    -moz-linear-gradient(#7A6100, #A98400);
					background:     -ms-linear-gradient(#7A6100, #A98400);
					background:      -o-linear-gradient(#7A6100, #A98400);
					background:         linear-gradient(#7A6100, #A98400);
				}
				#mBtn:disabled {
					background-color: #9E8315;
					background-image: none;
					cursor: default;
				}
				
				#ynmTable td {
					padding: 4px;
					white-space: nowrap;
					width: 1%;
					vertical-align: top;
				}
				#yesCell {
					background-color: #E7EEDA;
					
					   -webkit-border-top-left-radius:6px;
					-webkit-border-bottom-left-radius:6px;
					      -moz-border-top-left-radius:6px;
					   -moz-border-bottom-left-radius:6px;
					          border-top-left-radius: 6px;
					       border-bottom-left-radius: 6px;
				}
				#noCell {
					background-color: #F4D9D9;
				}
				#maybeCell {
					background-color: #FFF0D9;
					
					   -webkit-border-top-right-radius:6px;
					-webkit-border-bottom-right-radius:6px;
					      -moz-border-top-right-radius:6px;
					   -moz-border-bottom-right-radius:6px;
					           border-top-right-radius:6px;
					        border-bottom-right-radius:6px;
				}
				#ynmTable ul {
					list-style-type: none;
					padding: 0;
					margin: 4px 2px 0;
				}
				#ynmTable ul li {
					min-height: 36px;
					margin-bottom: 3px;
				}
				#ynmTable ul li img {
					float: left;
					margin-right: 6px;
					width: 36px;
					height: 36px;
				}
				#ynmTable ul li span {
					font-size: 10.5pt;
					font-weight: bold;
				}
			</style>
			<script type="text/javascript">
				function init() {
					if (wave && wave.isInWaveContainer()) {
						wave.setStateCallback(stateUpdated);
					}
				}
				gadgets.util.registerOnLoadHandler(init);
				
				function convertOldVotes(choice) {
					var oldVotes = wave.getState().get(choice);
					if(oldVotes) {
						oldVotes = JSON.parse(oldVotes);
						var delta = {};
						// Erase the old vote state.
						delta[choice] = null;
						// Convert “yes” to “y”, etc.
						choice = choice.charAt(0);
						
						// Convert the old votes to separate state entries.
						for(var i = 0; i < oldVotes.length; i++) {
							delta[oldVotes[i] + ":answer"] = choice;
						}
						// Submit the new votes.
						wave.getState().submitDelta(delta);
						
					}
				}
				
				function stateUpdated() {
					convertOldVotes("yes");
					convertOldVotes("no");
					convertOldVotes("maybe");
					
					//wave.setSnippet("Yes:" + y.length + " No:" + n.length + " Maybe:" + m.length);
					
					var answers = {
						"y": [],
						"n": [],
						"m": []
					};
					
					var keys = wave.getState().getKeys();
					var answerRegex = /(.*):answer$/;
					for(var i = 0; i < keys.length; i++) {
						var user = answerRegex.exec(keys[i]);
						// If the key is for an answer and the answer has an acceptable value,...
						if(user && wave.getState().get(keys[i]) in answers) {
							// ...get the answer,...
							var answer = wave.getState().get(keys[i]);
							// ...and add the answer to its array.
							answers[answer].push(user[1]);
						}
					}
					
					for(choice in answers) {
						// Set the total.
						document.getElementById(choice + "Count").innerHTML = "(" + answers[choice].length + ")";
					
						// Set the lists
						var voters = document.getElementById(choice + "Voters");
						voters.innerHTML = "";
						for(var i = 0; i < answers[choice].length; i++) {
							if(answers[choice][i]) {
								voters.appendChild(createVoterItem(answers[choice][i]));
							}
						}
					}
					
					//gadgets.window.adjustWidth();
					gadgets.window.adjustHeight();
					
					document.getElementById("yBtn").disabled = false;
					document.getElementById("nBtn").disabled = false;
					document.getElementById("mBtn").disabled = false;
					
					var viewerAnswer = wave.getState().get(wave.getViewer().getId() + ":answer");
					if(viewerAnswer) {
						document.getElementById(viewerAnswer + "Btn").disabled = true;
					}
				}
				function createVoterItem(id) {
					var voter = wave.getParticipantById(id);
					var voterItem = document.createElement("li");
					
					var icon = document.createElement("img");
					icon.src = voter.getThumbnailUrl();
					voterItem.appendChild(icon);
					
					var name = document.createElement("span");
					name.innerText = name.textContent = voter.getDisplayName();
					name.title = voter.getId();
					voterItem.appendChild(name);
					
					return voterItem;
				}
					

				function vote(choice) {
					var voteKey = wave.getViewer().getId();
					voteKey += ":answer";
					
					wave.getState().submitValue(voteKey, choice);
				}
			</script>
			<table id="ynmTable">
				<tr>
					<td id="yesCell">
						<button id="yBtn" onClick="vote('y');" disabled="disabled">Yes <span id="yCount"></span></button>
						<ul id="yVoters"></ul>
					</td>
					<td id="noCell">
						<button id="nBtn" onClick="vote('n');" disabled="disabled">No <span id="nCount"></span></button>
						<ul id="nVoters"></ul>
					</td>
					<td id="maybeCell">
						<button id="mBtn" onClick="vote('m');" disabled="disabled">Maybe <span id="mCount"></span></button>
						<ul id="mVoters"></ul>
					</td>
				</tr>
			</table>
		]]> 
	</Content>
</Module>
